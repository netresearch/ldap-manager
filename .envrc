# LDAP Manager - direnv configuration
# Automatically loads environment variables and tools when entering the project directory

# Load environment variables from .env file if it exists
if [[ -f .env ]]; then
    echo "Loading environment from .env..."
    dotenv .env
fi

# Set Go environment variables for development
export CGO_ENABLED=0
export GOOS=linux
export GOARCH=amd64

# Set project-specific environment variables
export PROJECT_ROOT="$(pwd)"
export BIN_DIR="$PROJECT_ROOT/bin"

# Add project bin directory to PATH for local tools
export PATH="$BIN_DIR:$PATH"

# Go development settings
export GOFLAGS="-trimpath"
export GOPROXY="https://proxy.golang.org,direct"
export GOSUMDB="sum.golang.org"

# Development-specific settings
export NODE_ENV="development"
export LOG_LEVEL="debug"
export SESSION_PATH="$PROJECT_ROOT/session.bbolt"

# Docker development settings
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

# Tool configuration
export GOLANGCI_LINT_CACHE="$PROJECT_ROOT/.cache/golangci-lint"

# Create necessary directories
mkdir -p "$BIN_DIR"
mkdir -p "$PROJECT_ROOT/.cache"

# Verify required tools are available
check_tool() {
    local tool=$1
    local install_cmd=$2
    
    if ! command -v "$tool" &> /dev/null; then
        echo "⚠️  $tool is not installed. Run: $install_cmd"
        return 1
    fi
    return 0
}

echo "🔧 LDAP Manager Development Environment"
echo "📁 Project root: $PROJECT_ROOT"

# Check for required tools
echo "🔍 Checking development tools..."

check_tool "go" "install Go from https://golang.org/"
check_tool "pnpm" "npm install -g pnpm"
check_tool "docker" "install Docker from https://docker.com/"

# Check for optional but recommended tools
if command -v golangci-lint &> /dev/null; then
    echo "✅ golangci-lint available"
else
    echo "💡 Run 'make setup-tools' to install Go development tools"
fi

if command -v templ &> /dev/null; then
    echo "✅ templ available"
else
    echo "💡 Run 'go install github.com/a-h/templ/cmd/templ@latest' for template generation"
fi

# Show helpful commands
echo ""
echo "🚀 Quick start commands:"
echo "  make help     - Show all available commands"
echo "  make setup    - Install all dependencies"
echo "  make dev      - Start development server"
echo "  make check    - Run all quality checks"
echo "  make build    - Build the application"
echo ""

# Load additional local environment if exists
if [[ -f .envrc.local ]]; then
    echo "Loading local environment from .envrc.local..."
    source_env .envrc.local
fi