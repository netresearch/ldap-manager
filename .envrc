# Load environment variables from .env file
if [[ -f .env ]]; then
  # Use direnv's dotenv if available, otherwise manual source
  if declare -f dotenv_if_exists >/dev/null 2>&1; then
    dotenv_if_exists .env
  else
    set -a
    source .env
    set +a
  fi
fi

# Welcome message
export PROJECT_NAME="${PROJECT_NAME:-ldap-manager}"

# Configure Docker Compose file based on Traefik settings
if [[ "${TRAEFIK_ENABLE:-false}" == "true" ]]; then
  # Use Traefik override: compose.yml + compose.traefik.yml
  export COMPOSE_FILE="compose.yml:compose.traefik.yml"
  echo "direnv: Loaded $PROJECT_NAME with Traefik enabled"
  echo "        Network: ${TRAEFIK_NETWORK:-traefik}"
  echo "        Access: https://${PROJECT_NAME}.${TRAEFIK_HOST:-localhost}"
  echo "        Run 'make help' for common commands."
else
  # Use base compose.yml only (no Traefik)
  export COMPOSE_FILE="compose.yml"
  echo "direnv: Loaded $PROJECT_NAME â€” run 'make help' for common commands."
  echo "        Access: http://localhost:${PORT:-3000}"
fi
echo "        First time here? Run 'direnv allow' and 'make setup'."

# Go development settings
export CGO_ENABLED=0
export GOFLAGS="-trimpath"

# Development environment
export NODE_ENV="development"
export LOG_LEVEL="debug"

# Docker settings
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

# Build metadata (set to empty for development builds)
# In CI/CD, these should be set to proper values
export BUILD_DATE="${BUILD_DATE:-}"
export VCS_REF="${VCS_REF:-}"

# Create directories
mkdir -p bin .cache